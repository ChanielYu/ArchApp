apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.auxy.archapp"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding true
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

kapt {
    correctErrorTypes = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.multidex:multidex:$multidex_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_extensions_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_viewmodel_version"
    implementation "androidx.legacy:legacy-support-v4:$legacy_support_v4_version"
    implementation "androidx.viewpager2:viewpager2:$viewpager2_version"
    implementation "androidx.cardview:cardview:$cardview_version"
    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    // Work Manager
    implementation "androidx.work:work-runtime-ktx:$work_version" // use -ktx for Kotlin
    // optional - RxJava2 support
    implementation "androidx.work:work-rxjava3:$work_version"
    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // Paging
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    implementation "com.google.android.material:material:$material_version"
    // Dagger 2
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    // Android Dagger 2
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    // if you use the support libraries
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    // ok http client 3
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"

    // Retrofit 2
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:retrofit-mock:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-jackson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

    // RxJava 3
    implementation "io.reactivex.rxjava3:rxandroid:$rxjava_version"
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    // (see https://github.com/ReactiveX/RxJava/releases for latest 3.x.x version)
    implementation "io.reactivex.rxjava3:rxjava:$rxjava_version"

    // Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    implementation "com.squareup.moshi:moshi-adapters:$moshi_version"
    // Gson
    implementation "com.google.code.gson:gson:$gson_version"

    // Coil
    implementation "io.coil-kt:coil:$coil_version"
    // Picasso
    implementation "com.squareup.picasso:picasso:$picasso_version"

    // Epoxy
    implementation "com.airbnb.android:epoxy:$epoxy_version"
    // Add the annotation processor if you are using Epoxy's annotations (recommended)
    kapt "com.airbnb.android:epoxy-processor:$epoxy_version"

    // For espresso activity rule
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation "androidx.test:runner:$androidx_test_runner_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_test_ext_junit_version"
    // Espresso dependencies
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-accessibility:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-web:$espresso_version"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espresso_version"
    // UiAutomator Testing
    androidTestImplementation "androidx.test.uiautomator:uiautomator:$uiautomator_version"

    // optional - Test helpers
    androidTestImplementation "androidx.work:work-testing:$work_version"

    testImplementation "junit:junit:$junit_version"
    // Test Architecture
    testImplementation "androidx.test:core:$androidx_test_coreVersion"
    testImplementation "androidx.arch.core:core-testing:$arch_core_testing_version"

    // Test Dagger
    testImplementation "com.google.dagger:dagger:$dagger_version"
    kaptTest "com.google.dagger:dagger-compiler:$dagger_version"
    // Test Android Dagger
    testImplementation "com.google.dagger:dagger-android:$dagger_version"
    testImplementation "com.google.dagger:dagger-android-support:$dagger_version"
    // if you use the support libraries
    kaptTest "com.google.dagger:dagger-android-processor:$dagger_version"

    // Mockito
    testImplementation "org.mockito:mockito-core:$mockito_version"
}
